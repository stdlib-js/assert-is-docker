{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar readFile = require( '@stdlib/fs-read-file' ).sync;\nvar contains = require( '@stdlib/assert-contains' );\nvar exists = require( '@stdlib/fs-exists' ).sync;\n\n\n// VARIABLES //\n\nvar OPTS = {\n\t'encoding': 'utf8'\n};\n\n\n// MAIN //\n\n/**\n* Returns a boolean indicating if the process is running in a Docker container.\n*\n* @returns {boolean} boolean indicating if the process is running in a Docker container\n*\n* @example\n* var bool = isDocker();\n* // returns <boolean>\n*/\nfunction isDocker() {\n\tvar file;\n\tif ( exists( '/.dockerenv' ) ) {\n\t\treturn true;\n\t}\n\tfile = readFile( '/proc/self/cgroup', OPTS );\n\tif ( file instanceof Error ) {\n\t\treturn false;\n\t}\n\treturn contains( file, 'docker' );\n}\n\n\n// EXPORTS //\n\nmodule.exports = isDocker;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Boolean indicating if the process is running in a Docker container.\n*\n* @module @stdlib/assert-is-docker\n*\n* @example\n* var IS_DOCKER = require( '@stdlib/assert-is-docker' );\n*\n* var bool = IS_DOCKER;\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// MAIN //\n\nvar bool = main();\n\n\n// EXPORTS //\n\nmodule.exports = bool;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAW,QAAS,sBAAuB,EAAE,KAC7CC,EAAW,QAAS,yBAA0B,EAC9CC,EAAS,QAAS,mBAAoB,EAAE,KAKxCC,EAAO,CACV,SAAY,MACb,EAcA,SAASC,GAAW,CACnB,IAAIC,EACJ,OAAKH,EAAQ,aAAc,EACnB,IAERG,EAAOL,EAAU,oBAAqBG,CAAK,EACtCE,aAAgB,MACb,GAEDJ,EAAUI,EAAM,QAAS,EACjC,CAKAN,EAAO,QAAUK,IC1BjB,IAAIE,EAAO,IAKPC,EAAOD,EAAK,EAKhB,OAAO,QAAUC",
  "names": ["require_main", "__commonJSMin", "exports", "module", "readFile", "contains", "exists", "OPTS", "isDocker", "file", "main", "bool"]
}
